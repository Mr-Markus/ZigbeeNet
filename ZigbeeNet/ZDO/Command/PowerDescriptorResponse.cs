using System;
using System.Collections.Generic;
using System.Text;
using ZigBeeNet.ZCL;
using ZigBeeNet.ZCL.Protocol;
using ZigBeeNet.ZDO.Field;

namespace ZigBeeNet.ZDO.Command
{
    /**
     * Power Descriptor Response value object class.
     * 
     * The Power_Desc_rsp is generated by a remote device in response to a
     * Power_Desc_req directed to the remote device. This command shall be unicast to
     * the originator of the Power_Desc_req command.
     * 
     * Code is auto-generated. Modifications may be overwritten!
     */
    public class PowerDescriptorResponse : ZdoResponse
    {
        /**
         * NWKAddrOfInterest command message field.
         */
        public ushort NwkAddrOfInterest { get; set; }

        /**
         * PowerDescriptor command message field.
         */
        public PowerDescriptor PowerDescriptor { get; set; }

        /**
         * Default constructor.
         */
        public PowerDescriptorResponse()
        {
            ClusterId = 0x8003;
        }

        public override void Serialize(ZclFieldSerializer serializer)
        {
            base.Serialize(serializer);

            serializer.Serialize(Status, ZclDataType.Get(DataType.ZDO_STATUS));
            serializer.Serialize(NwkAddrOfInterest, ZclDataType.Get(DataType.NWK_ADDRESS));
            serializer.Serialize(PowerDescriptor, ZclDataType.Get(DataType.POWER_DESCRIPTOR));
        }

        public override void Deserialize(ZclFieldDeserializer deserializer)
        {
            base.Deserialize(deserializer);

            Status = (ZdoStatus)deserializer.Deserialize(ZclDataType.Get(DataType.ZDO_STATUS));
            if (Status != ZdoStatus.SUCCESS)
            {
                // Don't read the full response if we have an error
                return;
            }
            NwkAddrOfInterest = (ushort)deserializer.Deserialize(ZclDataType.Get(DataType.NWK_ADDRESS));
            PowerDescriptor = (PowerDescriptor)deserializer.Deserialize(ZclDataType.Get(DataType.POWER_DESCRIPTOR));
        }

        public override string ToString()
        {
            StringBuilder builder = new StringBuilder(124);
            builder.Append("PowerDescriptorResponse [");
            builder.Append(base.ToString());
            builder.Append(", status=");
            builder.Append(Status);
            builder.Append(", nwkAddrOfInterest=");
            builder.Append(NwkAddrOfInterest);
            builder.Append(", powerDescriptor=");
            builder.Append(PowerDescriptor);
            builder.Append(']');
            return builder.ToString();
        }

    }
}

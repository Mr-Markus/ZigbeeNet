//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Structure
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    using ZigBeeNet.Hardware.Ember.Ezsp.Structure;
    
    
    /// <summary>
    /// Class to implement the Ember Structure " EmberNetworkParameters ".
    /// Network parameters.
    /// </summary>
    public class EmberNetworkParameters
    {
        
        /// <summary>
        ///  The network's extended PAN identifier.
        /// </summary>
        private ExtendedPanId _extendedPanId;
        
        /// <summary>
        ///  The network's PAN identifier.
        /// </summary>
        private int _panId;
        
        /// <summary>
        ///  A power setting, in dBm.
        /// </summary>
        private int _radioTxPower;
        
        /// <summary>
        ///  A radio channel.
        /// </summary>
        private int _radioChannel;
        
        /// <summary>
        ///  The method used to initially join the network
        /// </summary>
        private EmberJoinMethod _joinMethod;
        
        /// <summary>
        ///  NWK Manager ID. The ID of the network manager in the current network. This may only be set at
        /// joining when using EMBER_USE_NWK_COMMISSIONING as the join method.
        /// </summary>
        private int _nwkManagerId;
        
        /// <summary>
        ///  NWK Update ID. The value of the ZigBee nwkUpdateId known by the stack. This is used to
        /// determine the newest instance of the network after a PAN ID or channel change. This may only be
        /// set at joining when using EMBER_USE_NWK_COMMISSIONING as the join method.
        /// </summary>
        private int _nwkUpdateId;
        
        /// <summary>
        ///  NWK channel mask. The list of preferred channels that the NWK manager has told this device to
        /// use when searching for the network. This may only be set at joining when using
        /// EMBER_USE_NWK_COMMISSIONING as the join method.
        /// </summary>
        private int _channels;
        
        public EmberNetworkParameters()
        {
        }
        
        public EmberNetworkParameters(EzspDeserializer deserializer)
        {
            Deserialize(deserializer);
        }
        
        /// <summary>
        /// The extendedPanId to set as <see cref="ExtendedPanId"/> </summary>
        public void SetExtendedPanId(ExtendedPanId extendedPanId)
        {
            _extendedPanId = extendedPanId;
        }
        
        /// <summary>
        /// The panId to set as <see cref="uint16_t"/> </summary>
        public void SetPanId(int panId)
        {
            _panId = panId;
        }
        
        /// <summary>
        /// The radioTxPower to set as <see cref="uint8_t"/> </summary>
        public void SetRadioTxPower(int radioTxPower)
        {
            _radioTxPower = radioTxPower;
        }
        
        /// <summary>
        /// The radioChannel to set as <see cref="uint8_t"/> </summary>
        public void SetRadioChannel(int radioChannel)
        {
            _radioChannel = radioChannel;
        }
        
        /// <summary>
        /// The joinMethod to set as <see cref="EmberJoinMethod"/> </summary>
        public void SetJoinMethod(EmberJoinMethod joinMethod)
        {
            _joinMethod = joinMethod;
        }
        
        /// <summary>
        /// The nwkManagerId to set as <see cref="EmberNodeId"/> </summary>
        public void SetNwkManagerId(int nwkManagerId)
        {
            _nwkManagerId = nwkManagerId;
        }
        
        /// <summary>
        /// The nwkUpdateId to set as <see cref="uint8_t"/> </summary>
        public void SetNwkUpdateId(int nwkUpdateId)
        {
            _nwkUpdateId = nwkUpdateId;
        }
        
        /// <summary>
        /// The channels to set as <see cref="uint32_t"/> </summary>
        public void SetChannels(int channels)
        {
            _channels = channels;
        }
        
        /// <summary>
        ///  The network's extended PAN identifier.
        /// Return the extendedPanId as <see cref="ExtendedPanId"/>
        /// </summary>
        public ExtendedPanId GetExtendedPanId()
        {
            return _extendedPanId;
        }
        
        /// <summary>
        ///  The network's PAN identifier.
        /// Return the panId as <see cref="System.Int32"/>
        /// </summary>
        public int GetPanId()
        {
            return _panId;
        }
        
        /// <summary>
        ///  A power setting, in dBm.
        /// Return the radioTxPower as <see cref="System.Int32"/>
        /// </summary>
        public int GetRadioTxPower()
        {
            return _radioTxPower;
        }
        
        /// <summary>
        ///  A radio channel.
        /// Return the radioChannel as <see cref="System.Int32"/>
        /// </summary>
        public int GetRadioChannel()
        {
            return _radioChannel;
        }
        
        /// <summary>
        ///  The method used to initially join the network
        /// Return the joinMethod as <see cref="EmberJoinMethod"/>
        /// </summary>
        public EmberJoinMethod GetJoinMethod()
        {
            return _joinMethod;
        }
        
        /// <summary>
        ///  NWK Manager ID. The ID of the network manager in the current network. This may only be set at
        /// joining when using EMBER_USE_NWK_COMMISSIONING as the join method.
        /// Return the nwkManagerId as <see cref="System.Int32"/>
        /// </summary>
        public int GetNwkManagerId()
        {
            return _nwkManagerId;
        }
        
        /// <summary>
        ///  NWK Update ID. The value of the ZigBee nwkUpdateId known by the stack. This is used to
        /// determine the newest instance of the network after a PAN ID or channel change. This may only be
        /// set at joining when using EMBER_USE_NWK_COMMISSIONING as the join method.
        /// Return the nwkUpdateId as <see cref="System.Int32"/>
        /// </summary>
        public int GetNwkUpdateId()
        {
            return _nwkUpdateId;
        }
        
        /// <summary>
        ///  NWK channel mask. The list of preferred channels that the NWK manager has told this device to
        /// use when searching for the network. This may only be set at joining when using
        /// EMBER_USE_NWK_COMMISSIONING as the join method.
        /// Return the channels as <see cref="System.Int32"/>
        /// </summary>
        public int GetChannels()
        {
            return _channels;
        }
        
        /// <summary>
        /// Serialise the contents of the EZSP structure. </summary>
        public int[] Serialize(EzspSerializer serializer)
        {
            serializer.SerializeExtendedPanId(_extendedPanId);
            serializer.SerializeUInt16(_panId);
            serializer.SerializeUInt8(_radioTxPower);
            serializer.SerializeUInt8(_radioChannel);
            serializer.SerializeEmberJoinMethod(_joinMethod);
            serializer.SerializeUInt16(_nwkManagerId);
            serializer.SerializeUInt8(_nwkUpdateId);
            serializer.SerializeUInt32(_channels);
            return serializer.GetPayload();
        }
        
        /// <summary>
        /// Deserialise the contents of the EZSP structure. </summary>
        public void Deserialize(EzspDeserializer deserializer)
        {
            _extendedPanId = deserializer.DeserializeExtendedPanId();
            _panId = deserializer.DeserializeUInt16();
            _radioTxPower = deserializer.DeserializeUInt8();
            _radioChannel = deserializer.DeserializeUInt8();
            _joinMethod = deserializer.DeserializeEmberJoinMethod();
            _nwkManagerId = deserializer.DeserializeUInt16();
            _nwkUpdateId = deserializer.DeserializeUInt8();
            _channels = deserializer.DeserializeUInt32();
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EmberNetworkParameters [extendedPanId=");
            builder.Append(_extendedPanId);
            builder.Append(", panId=");
            builder.Append(string.Format("0x{0:X04}", _panId));
            builder.Append(", radioTxPower=");
            builder.Append(_radioTxPower);
            builder.Append(", radioChannel=");
            builder.Append(_radioChannel);
            builder.Append(", joinMethod=");
            builder.Append(_joinMethod);
            builder.Append(", nwkManagerId=");
            builder.Append(string.Format("0x{0:X04}", _nwkManagerId));
            builder.Append(", nwkUpdateId=");
            builder.Append(_nwkUpdateId);
            builder.Append(", channels=");
            builder.Append(string.Format("0x{0:X08}", _channels));
            builder.Append(']');
            return builder.ToString();
        }
    }
}

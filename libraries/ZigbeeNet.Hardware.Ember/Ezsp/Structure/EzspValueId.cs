//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Structure
{
    
    
    /// <summary>
    /// Class to implement the Ember Enumeration <b>EzspValueId</b>
    /// </summary>
    public enum EzspValueId
    {
        
        /// <summary>
        /// Default unknown value
        /// </summary>
        UNKNOWN = -1,
        
        /// <summary>
        ///  [0] The contents of the node data stack token.
        /// </summary>
        EZSP_VALUE_TOKEN_STACK_NODE_DATA = 0x0000,
        
        /// <summary>
        ///  [1] The types of MAC passthrough messages that the host wishes to receive.
        /// </summary>
        EZSP_VALUE_MAC_PASSTHROUGH_FLAGS = 0x0001,
        
        /// <summary>
        ///  [2] The source address used to filter legacy EmberNet messages when the
        /// EMBER_MAC_PASSTHROUGH_EMBERNET_SOURCE flag is set in
        /// EZSP_VALUE_MAC_PASSTHROUGH_FLAGS.
        /// </summary>
        EZSP_VALUE_EMBERNET_PASSTHROUGH_SOURCE_ADDRESS = 0x0002,
        
        /// <summary>
        ///  [3] The number of available message buffers.
        /// </summary>
        EZSP_VALUE_FREE_BUFFERS = 0x0003,
        
        /// <summary>
        ///  [4] Selects sending synchronous callbacks in ezsp-uart.
        /// </summary>
        EZSP_VALUE_UART_SYNCH_CALLBACKS = 0x0004,
        
        /// <summary>
        ///  [5] The maximum incoming transfer size for the local node.
        /// </summary>
        EZSP_VALUE_MAXIMUM_INCOMING_TRANSFER_SIZE = 0x0005,
        
        /// <summary>
        ///  [6] The maximum outgoing transfer size for the local node.
        /// </summary>
        EZSP_VALUE_MAXIMUM_OUTGOING_TRANSFER_SIZE = 0x0006,
        
        /// <summary>
        ///  [7] A boolean indicating whether stack tokens are written to persistent storage as they
        /// change.
        /// </summary>
        EZSP_VALUE_STACK_TOKEN_WRITING = 0x0007,
        
        /// <summary>
        ///  [8] A read-only value indicating whether the stack is currently performing a rejoin.
        /// </summary>
        EZSP_VALUE_STACK_IS_PERFORMING_REJOIN = 0x0008,
        
        /// <summary>
        ///  [9] A list of EmberMacFilterMatchData values.
        /// </summary>
        EZSP_VALUE_MAC_FILTER_LIST = 0x0009,
        
        /// <summary>
        ///  [10] The Ember Extended Security Bitmask.
        /// </summary>
        EZSP_VALUE_EXTENDED_SECURITY_BITMASK = 0x000A,
        
        /// <summary>
        ///  [11] The node short ID.
        /// </summary>
        EZSP_VALUE_NODE_SHORT_ID = 0x000B,
        
        /// <summary>
        ///  [12] The descriptor capability of the local node.
        /// </summary>
        EZSP_VALUE_DESCRIPTOR_CAPABILITY = 0x000C,
        
        /// <summary>
        ///  [13] The stack device request sequence number of the local node.
        /// </summary>
        EZSP_VALUE_STACK_DEVICE_REQUEST_SEQUENCE_NUMBER = 0x000D,
        
        /// <summary>
        ///  [14] Enable or disable radio hold-off.
        /// </summary>
        EZSP_VALUE_RADIO_HOLD_OFF = 0x000E,
        
        /// <summary>
        ///  [15] The flags field associated with the endpoint data.
        /// </summary>
        EZSP_VALUE_ENDPOINT_FLAGS = 0x000F,
        
        /// <summary>
        ///  [16] Enable/disable the Mfg security config key settings.
        /// </summary>
        EZSP_VALUE_MFG_SECURITY_CONFIG = 0x0010,
        
        /// <summary>
        ///  [17] Retrieves the version information from the stack on the NCP.
        /// </summary>
        EZSP_VALUE_VERSION_INFO = 0x0011,
        
        /// <summary>
        ///  [18] This will get/set the rejoin reason noted by the host for a subsequent call to
        /// emberFindAndRejoinNetwork(). After a call to emberFindAndRejoinNetwork() the host's
        /// rejoin reason will be set to EMBER_REJOIN_REASON_NONE. The NCP will store the rejoin reason
        /// used by the call to emberFindAndRejoinNetwork()
        /// </summary>
        EZSP_VALUE_NEXT_HOST_REJOIN_REASON = 0x0012,
        
        /// <summary>
        ///  [19] This is the reason that the last rejoin took place. This value may only be retrieved, not
        /// set. The rejoin may have been initiated by the stack (NCP) or the application (host). If a host
        /// initiated a rejoin the reason will be set by default to EMBER_REJOIN_DUE_TO_APP_EVENT_1.
        /// If the application wishes to denote its own rejoin reasons it can do so by calling
        /// ezspSetValue(EMBER_VALUE_HOST_REJOIN_REASON, EMBER_REJOIN_DUE_TO_APP_EVENT_X). X
        /// is a number corresponding to one of the app events defined. If the NCP initiated a rejoin it
        /// will record this value internally for retrieval by
        /// ezspGetValue(EZSP_VALUE_REAL_REJOIN_REASON).
        /// </summary>
        EZSP_VALUE_LAST_REJOIN_REASON = 0x0013,
        
        /// <summary>
        ///  [20] The next ZigBee sequence number.
        /// </summary>
        EZSP_VALUE_NEXT_ZIGBEE_SEQUENCE_NUMBER = 0x0014,
        
        /// <summary>
        ///  [21] CCA energy detect threshold for radio.
        /// </summary>
        EZSP_VALUE_CCA_THRESHOLD = 0x0015,
        
        /// <summary>
        ///  [23] The threshold value for a counter
        /// </summary>
        EZSP_VALUE_SET_COUNTER_THRESHOLD = 0x0017,
        
        /// <summary>
        ///  [24] Resets all counters thresholds to 0xFF
        /// </summary>
        EZSP_VALUE_RESET_COUNTER_THRESHOLDS = 0x0018,
        
        /// <summary>
        ///  [25] Clears all the counters
        /// </summary>
        EZSP_VALUE_CLEAR_COUNTERS = 0x0019,
        
        /// <summary>
        ///  [26] The node's new certificate signed by the CA.
        /// </summary>
        EZSP_VALUE_CERTIFICATE_283K1 = 0x001A,
        
        /// <summary>
        ///  [27] The Certificate Authority's public key.
        /// </summary>
        EZSP_VALUE_PUBLIC_KEY_283K1 = 0x001B,
        
        /// <summary>
        ///  [28] The node's new static private key.
        /// </summary>
        EZSP_VALUE_PRIVATE_KEY_283K1 = 0x001C,
        
        /// <summary>
        ///  [35] The NWK layer security frame counter value
        /// </summary>
        EZSP_VALUE_NWK_FRAME_COUNTER = 0x0023,
        
        /// <summary>
        ///  [36] The APS layer security frame counter value
        /// </summary>
        EZSP_VALUE_APS_FRAME_COUNTER = 0x0024,
        
        /// <summary>
        ///  [37] Sets the device type to use on the next rejoin using device type
        /// </summary>
        EZSP_VALUE_RETRY_DEVICE_TYPE = 0x0025,
        
        /// <summary>
        ///  [41] Setting this byte enables R21 behavior on the NCP.
        /// </summary>
        EZSP_VALUE_ENABLE_R21_BEHAVIOR = 0x0029,
        
        /// <summary>
        ///  [48] Configure the antenna mode(0-primary,1-secondary,2-toggle on tx ack fail).
        /// </summary>
        EZSP_VALUE_ANTENNA_MODE = 0x0030,
        
        /// <summary>
        ///  [49] Enable or disable packet traffic arbitration.
        /// </summary>
        EZSP_VALUE_ENABLE_PTA = 0x0031,
        
        /// <summary>
        ///  [50] Set packet traffic arbitration configuration options.
        /// </summary>
        EZSP_VALUE_PTA_OPTIONS = 0x0032,
        
        /// <summary>
        ///  [51] Configure manufacturing library options (0-non-CSMA transmits,1-CSMA transmits).
        /// </summary>
        EZSP_VALUE_MFGLIB_OPTIONS = 0x0033,
        
        /// <summary>
        ///  [52] Sets the flag to use either negotiated power by link power delta (LPD) or fixed power
        /// value provided by user while forming/joining a network for packet transmissions on subghz
        /// interface. This is mainly for testing purposes.
        /// </summary>
        EZSP_VALUE_USE_NEGOTIATED_POWER_BY_LPD = 0x0034,
        
        /// <summary>
        ///  [53] Set packet traffic arbitration PWM options.
        /// </summary>
        EZSP_VALUE_PTA_PWM_OPTIONS = 0x0035,
        
        /// <summary>
        ///  [54] Set packet traffic arbitration directional priority pulse width in microseconds.
        /// </summary>
        EZSP_VALUE_PTA_DIRECTIONAL_PRIORITY_PULSE_WIDTH = 0x0036,
        
        /// <summary>
        ///  [55] Set packet traffic arbitration phy select timeout(ms).
        /// </summary>
        EZSP_VALUE_PTA_PHY_SELECT_TIMEOUT = 0x0037,
        
        /// <summary>
        ///  [56] Configure the RX antenna mode: (0-do not switch; 1-primary; 2-secondary; 3-RX antenna
        /// diversity).
        /// </summary>
        EZSP_VALUE_ANTENNA_RX_MODE = 0x0038,
        
        /// <summary>
        ///  [57] Configure the timeout to wait for the network key before failing a join
        /// </summary>
        EZSP_VALUE_NWK_KEY_TIMEOUT = 0x0039,
        
        /// <summary>
        ///  [58] The number of failed CSMA attempts due to failed CCA made by the MAC before continuing
        /// transmission with CCA disabled. This is the same as calling the
        /// emberForceTxAfterFailedCca(uint8_t csmaAttempts) API. A value of 0 disables the
        /// feature.
        /// </summary>
        EZSP_VALUE_FORCE_TX_AFTER_FAILED_CCA_ATTEMPTS = 0x003A,
        
        /// <summary>
        ///  [59] The length of time, in seconds, that a trust center will store a transient link key that a
        /// device can use to join its network. A transient key is added with a call to
        /// emberAddTransientLinkKey. After the transient key is added, it will be removed once this
        /// amount of time has passed. A joining device will not be able to use that key to join until it is
        /// added again on the trust center. The default value is 300 seconds (5 minutes).
        /// </summary>
        EZSP_VALUE_TRANSIENT_KEY_TIMEOUT_S = 0x003B,
        
        /// <summary>
        ///  [60] Cumulative energy usage metric since the last value reset of the coulomb counter
        /// plugin. Setting this value will reset the coulomb counter.
        /// </summary>
        EZSP_VALUE_COULOMB_COUNTER_USAGE = 0x003C,
        
        /// <summary>
        ///  [61] When scanning, configure the maximum number of beacons to store in cache. Each beacon
        /// consumes one packet buffer in RAM.
        /// </summary>
        EZSP_VALUE_MAX_BEACONS_TO_STORE = 0x003D,
    }
}

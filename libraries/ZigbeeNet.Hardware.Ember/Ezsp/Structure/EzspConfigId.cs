//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Structure
{
    
    
    /// <summary>
    /// Class to implement the Ember Enumeration <b>EzspConfigId</b>
    ///<p>
    /// Identifies which configuration value to read or change with getConfigurationValue and
    /// setConfigurationValue.
    ///</p> </summary>
    public enum EzspConfigId
    {
        
        /// <summary>
        /// Default unknown value
        /// </summary>
        UNKNOWN = -1,
        
        /// <summary>
        ///  [1] The number of packet buffers available to the stack. When set to the special value 0xFF,
        /// the NCP will allocate all remaining configuration RAM towards packet buffers, such that the
        /// resulting count will be the largest whole number of packet buffers that can fit into the
        /// available memory.
        /// </summary>
        EZSP_CONFIG_PACKET_BUFFER_COUNT = 0x0001,
        
        /// <summary>
        ///  [2] The maximum number of router neighbors the stack can keep track of. A neighbor is a node
        /// within radio range.
        /// </summary>
        EZSP_CONFIG_NEIGHBOR_TABLE_SIZE = 0x0002,
        
        /// <summary>
        ///  [3] The maximum number of APS retried messages the stack can be transmitting at any time.
        /// </summary>
        EZSP_CONFIG_APS_UNICAST_MESSAGE_COUNT = 0x0003,
        
        /// <summary>
        ///  [4] The maximum number of non-volatile bindings supported by the stack.
        /// </summary>
        EZSP_CONFIG_BINDING_TABLE_SIZE = 0x0004,
        
        /// <summary>
        ///  [5] The maximum number of EUI64 to network address associations that the stack can maintain
        /// for the application. (Note, the total number of such address associations maintained by the
        /// NCP is the sum of the value of this setting and the value of
        /// ::EZSP_CONFIG_TRUST_CENTER_ADDRESS_CACHE_SIZE.). 
        /// </summary>
        EZSP_CONFIG_ADDRESS_TABLE_SIZE = 0x0005,
        
        /// <summary>
        ///  [6] The maximum number of multicast groups that the device may be a member of.
        /// </summary>
        EZSP_CONFIG_MULTICAST_TABLE_SIZE = 0x0006,
        
        /// <summary>
        ///  [7] The maximum number of destinations to which a node can route messages. This includes both
        /// messages originating at this node and those relayed for others.
        /// </summary>
        EZSP_CONFIG_ROUTE_TABLE_SIZE = 0x0007,
        
        /// <summary>
        ///  [8] The number of simultaneous route discoveries that a node will support.
        /// </summary>
        EZSP_CONFIG_DISCOVERY_TABLE_SIZE = 0x0008,
        
        /// <summary>
        ///  [12] Specifies the stack profile.
        /// </summary>
        EZSP_CONFIG_STACK_PROFILE = 0x000C,
        
        /// <summary>
        ///  [13] The security level used for security at the MAC and network layers. The supported values
        /// are 0 (no security) and 5 (payload is encrypted and a four-byte MIC is used for
        /// authentication).
        /// </summary>
        EZSP_CONFIG_SECURITY_LEVEL = 0x000D,
        
        /// <summary>
        ///  [16] The maximum number of hops for a message.
        /// </summary>
        EZSP_CONFIG_MAX_HOPS = 0x0010,
        
        /// <summary>
        ///  [17] The maximum number of end device children that a router will support.
        /// </summary>
        EZSP_CONFIG_MAX_END_DEVICE_CHILDREN = 0x0011,
        
        /// <summary>
        ///  [18] The maximum amount of time that the MAC will hold a message for indirect transmission to a
        /// child.
        /// </summary>
        EZSP_CONFIG_INDIRECT_TRANSMISSION_TIMEOUT = 0x0012,
        
        /// <summary>
        ///  [19] The maximum amount of time that an end device child can wait between polls. If no poll is
        /// heard within this timeout, then the parent removes the end device from its tables.
        /// </summary>
        EZSP_CONFIG_END_DEVICE_POLL_TIMEOUT = 0x0013,
        
        /// <summary>
        ///  [20] The maximum amount of time that a mobile node can wait between polls. If no poll is heard
        /// within this timeout, then the parent removes the mobile node from its tables.
        /// </summary>
        EZSP_CONFIG_MOBILE_NODE_POLL_TIMEOUT = 0x0014,
        
        /// <summary>
        ///  [21] The number of child table entries reserved for use only by mobile nodes.
        /// </summary>
        EZSP_CONFIG_RESERVED_MOBILE_CHILD_ENTRIES = 0x0015,
        
        /// <summary>
        ///  [23] Enables boost power mode and/or the alternate transmitter output.
        /// </summary>
        EZSP_CONFIG_TX_POWER_MODE = 0x0017,
        
        /// <summary>
        ///  [24] 0: Allow this node to relay messages. 1: Prevent this node from relaying messages.
        /// </summary>
        EZSP_CONFIG_DISABLE_RELAY = 0x0018,
        
        /// <summary>
        ///  [25] The maximum number of EUI64 to network address associations that the Trust Center can
        /// maintain. These address cache entries are reserved for and reused by the Trust Center when
        /// processing device join/rejoin authentications. This cache size limits the number of
        /// overlapping joins the Trust Center can process within a narrow time window (e.g. two
        /// seconds), and thus should be set to the maximum number of near simultaneous joins the Trust
        /// Center is expected to accommodate. (Note, the total number of such address associations
        /// maintained by the NCP is the sum of the value of this setting and the value of
        /// ::EZSP_CONFIG_ADDRESS_TABLE_SIZE.) 
        /// </summary>
        EZSP_CONFIG_TRUST_CENTER_ADDRESS_CACHE_SIZE = 0x0019,
        
        /// <summary>
        ///  [26] The size of the source route table.
        /// </summary>
        EZSP_CONFIG_SOURCE_ROUTE_TABLE_SIZE = 0x001A,
        
        /// <summary>
        ///  [27] The units used for timing out end devices on their parents.
        /// </summary>
        EZSP_CONFIG_END_DEVICE_POLL_TIMEOUT_SHIFT = 0x001B,
        
        /// <summary>
        ///  [28] The number of blocks of a fragmented message that can be sent in a single window.
        /// </summary>
        EZSP_CONFIG_FRAGMENT_WINDOW_SIZE = 0x001C,
        
        /// <summary>
        ///  [29] The time the stack will wait (in milliseconds) between sending blocks of a fragmented
        /// message.
        /// </summary>
        EZSP_CONFIG_FRAGMENT_DELAY_MS = 0x001D,
        
        /// <summary>
        ///  [30] The size of the Key Table used for storing individual link keys (if the device is a Trust
        /// Center) or Application Link Keys (if the device is a normal node).
        /// </summary>
        EZSP_CONFIG_KEY_TABLE_SIZE = 0x001E,
        
        /// <summary>
        ///  [31] The APS ACK timeout value. The stack waits this amount of time between resends of APS
        /// retried messages.
        /// </summary>
        EZSP_CONFIG_APS_ACK_TIMEOUT = 0x001F,
        
        /// <summary>
        ///  [32] The duration of a beacon jitter, in the units used by the 15.4 scan parameter (((1 less
        /// than duration) + 1) * 15ms), when responding to a beacon request.
        /// </summary>
        EZSP_CONFIG_BEACON_JITTER_DURATION = 0x0020,
        
        /// <summary>
        ///  [33] The time the coordinator will wait (in seconds) for a second end device bind request to
        /// arrive.
        /// </summary>
        EZSP_CONFIG_END_DEVICE_BIND_TIMEOUT = 0x0021,
        
        /// <summary>
        ///  [34] The number of PAN id conflict reports that must be received by the network manager within
        /// one minute to trigger a PAN id change.
        /// </summary>
        EZSP_CONFIG_PAN_ID_CONFLICT_REPORT_THRESHOLD = 0x0022,
        
        /// <summary>
        ///  [36] The timeout value in minutes for how long the Trust Center or a normal node waits for the
        /// ZigBee Request Key to complete. On the Trust Center this controls whether or not the device
        /// buffers the request, waiting for a matching pair of ZigBee Request Key. If the value is
        /// non-zero, the Trust Center buffers and waits for that amount of time. If the value is zero, the
        /// Trust Center does not buffer the request and immediately responds to the request. Zero is the
        /// most compliant behavior.
        /// </summary>
        EZSP_CONFIG_REQUEST_KEY_TIMEOUT = 0x0024,
        
        /// <summary>
        ///  [41] This value indicates the size of the runtime modifiable certificate table. Normally
        /// certificates are stored in MFG tokens but this table can be used to field upgrade devices with
        /// new Smart Energy certificates. This value cannot be set, it can only be queried.
        /// </summary>
        EZSP_CONFIG_CERTIFICATE_TABLE_SIZE = 0x0029,
        
        /// <summary>
        ///  [42] This is a bitmask that controls which incoming ZDO request messages are passed to the
        /// application. The bits are defined in the EmberZdoConfigurationFlags enumeration. To see
        /// if the application is required to send a ZDO response in reply to an incoming message, the
        /// application must check the APS options bitfield within the incomingMessageHandler
        /// callback to see if the EMBER_APS_OPTION_ZDO_RESPONSE_REQUIRED flag is set.
        /// </summary>
        EZSP_CONFIG_APPLICATION_ZDO_FLAGS = 0x002A,
        
        /// <summary>
        ///  [43] The maximum number of broadcasts during a single broadcast timeout period.
        /// </summary>
        EZSP_CONFIG_BROADCAST_TABLE_SIZE = 0x002B,
        
        /// <summary>
        ///  [44] The size of the MAC filter list table.
        /// </summary>
        EZSP_CONFIG_MAC_FILTER_TABLE_SIZE = 0x002C,
        
        /// <summary>
        ///  [45] The number of supported networks.
        /// </summary>
        EZSP_CONFIG_SUPPORTED_NETWORKS = 0x002D,
        
        /// <summary>
        ///  [46] Whether multicasts are sent to the RxOnWhenIdle=true address (0xFFFD) or the sleepy
        /// broadcast address (0xFFFF). The RxOnWhenIdle=true address is the ZigBee compliant
        /// destination for multicasts.
        /// </summary>
        EZSP_CONFIG_SEND_MULTICASTS_TO_SLEEPY_ADDRESS = 0x002E,
        
        /// <summary>
        ///  [47] ZLL group address initial configuration.
        /// </summary>
        EZSP_CONFIG_ZLL_GROUP_ADDRESSES = 0x002F,
        
        /// <summary>
        ///  [48] ZLL rssi threshold initial configuration.
        /// </summary>
        EZSP_CONFIG_ZLL_RSSI_THRESHOLD = 0x0030,
        
        /// <summary>
        ///  [51] Toggles the mtorr flow control in the stack.
        /// </summary>
        EZSP_CONFIG_MTORR_FLOW_CONTROL = 0x0033,
        
        /// <summary>
        ///  [52] Setting the retry queue size.
        /// </summary>
        EZSP_CONFIG_RETRY_QUEUE_SIZE = 0x0034,
        
        /// <summary>
        ///  [53] Setting the new broadcast entry threshold.
        /// </summary>
        EZSP_CONFIG_NEW_BROADCAST_ENTRY_THRESHOLD = 0x0035,
        
        /// <summary>
        ///  [54] The length of time, in seconds, that a trust center will store a transient link key that a
        /// device can use to join its network. A transient key is added with a call to
        /// emberAddTransientLinkKey. After the transient key is added, it will be removed once this
        /// amount of time has passed. A joining device will not be able to use that key to join until it is
        /// added again on the trust center. The default value is 300 seconds, i.e., 5 minutes.
        /// </summary>
        EZSP_CONFIG_TRANSIENT_KEY_TIMEOUT_S = 0x0036,
        
        /// <summary>
        ///  [55] The number of passive acknowledgements to record from neighbors before we stop
        /// re-transmitting broadcasts.
        /// </summary>
        EZSP_CONFIG_BROADCAST_MIN_ACKS_NEEDED = 0x0037,
        
        /// <summary>
        ///  [56] The length of time, in seconds, that a trust center will allow a Trust Center (insecure)
        /// rejoin for a device that is using the well-known link key. This timeout takes effect once
        /// rejoins using the well-known key has been allowed. This command updates the
        /// emAllowTcRejoinsUsingWellKnownKeyTimeoutSec value.
        /// </summary>
        EZSP_CONFIG_TC_REJOINS_USING_WELL_KNOWN_KEY_TIMEOUT_S = 0x0038,
    }
}

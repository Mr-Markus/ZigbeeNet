//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " removeDevice ".
    /// This command sends an APS remove device using APS encryption to the destination indicating
    /// either to remove itself from the network, or one of its children.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspRemoveDeviceRequest : EzspFrameRequest
    {
        
        public const int FRAME_ID = 168;
        
        /// <summary>
        ///  The node ID of the device that will receive the message
        /// </summary>
        private int _destShort;
        
        /// <summary>
        ///  The long address (EUI64) of the device that will receive the message.
        /// </summary>
        private IeeeAddress _destLong;
        
        /// <summary>
        ///  The long address (EUI64) of the device to be removed.
        /// </summary>
        private IeeeAddress _targetLong;
        
        private EzspSerializer _serializer;
        
        public EzspRemoveDeviceRequest()
        {
            _frameId = FRAME_ID;
            _serializer = new EzspSerializer();
        }
        
        /// <summary>
        /// The destShort to set as <see cref="EmberNodeId"/> </summary>
        public void SetDestShort(int destShort)
        {
            _destShort = destShort;
        }
        
        /// <summary>
        /// The destLong to set as <see cref="EmberEUI64"/> </summary>
        public void SetDestLong(IeeeAddress destLong)
        {
            _destLong = destLong;
        }
        
        /// <summary>
        /// The targetLong to set as <see cref="EmberEUI64"/> </summary>
        public void SetTargetLong(IeeeAddress targetLong)
        {
            _targetLong = targetLong;
        }
        
        /// <summary>
        ///  The node ID of the device that will receive the message
        /// Return the destShort as <see cref="System.Int32"/>
        /// </summary>
        public int GetDestShort()
        {
            return _destShort;
        }
        
        /// <summary>
        ///  The long address (EUI64) of the device that will receive the message.
        /// Return the destLong as <see cref="IeeeAddress"/>
        /// </summary>
        public IeeeAddress GetDestLong()
        {
            return _destLong;
        }
        
        /// <summary>
        ///  The long address (EUI64) of the device to be removed.
        /// Return the targetLong as <see cref="IeeeAddress"/>
        /// </summary>
        public IeeeAddress GetTargetLong()
        {
            return _targetLong;
        }
        
        /// <summary>
        /// Method for serializing the command fields </summary>
        public override int[] Serialize()
        {
            SerializeHeader(_serializer);
            _serializer.SerializeUInt16(_destShort);
            _serializer.SerializeEmberEui64(_destLong);
            _serializer.SerializeEmberEui64(_targetLong);
            return _serializer.GetPayload();
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspRemoveDeviceRequest [destShort=");
            builder.Append(string.Format("0x{0:X04}", _destShort));
            builder.Append(", destLong=");
            builder.Append(_destLong);
            builder.Append(", targetLong=");
            builder.Append(_targetLong);
            builder.Append(']');
            return builder.ToString();
        }
    }
}

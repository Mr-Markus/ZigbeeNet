//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    using ZigBeeNet.Hardware.Ember.Ezsp.Structure;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " setKeyTableEntry ".
    /// Sets the key table entry at the specified index.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspSetKeyTableEntryRequest : EzspFrameRequest
    {
        
        public const int FRAME_ID = 114;
        
        /// <summary>
        ///  The index of the entry in the table to set.
        /// </summary>
        private int _index;
        
        /// <summary>
        ///  The address of the partner device that shares the key
        /// </summary>
        private IeeeAddress _address;
        
        /// <summary>
        ///  This indicates whether the key is a Link or a Master Key
        /// </summary>
        private bool _linkKey;
        
        /// <summary>
        ///  The actual key data associated with the table entry.
        /// </summary>
        private EmberKeyData _keyStruct;
        
        private EzspSerializer _serializer;
        
        public EzspSetKeyTableEntryRequest()
        {
            _frameId = FRAME_ID;
            _serializer = new EzspSerializer();
        }
        
        /// <summary>
        /// The index to set as <see cref="uint8_t"/> </summary>
        public void SetIndex(int index)
        {
            _index = index;
        }
        
        /// <summary>
        /// The address to set as <see cref="EmberEUI64"/> </summary>
        public void SetAddress(IeeeAddress address)
        {
            _address = address;
        }
        
        /// <summary>
        /// The linkKey to set as <see cref="bool"/> </summary>
        public void SetLinkKey(bool linkKey)
        {
            _linkKey = linkKey;
        }
        
        /// <summary>
        /// The keyStruct to set as <see cref="EmberKeyData"/> </summary>
        public void SetKeyStruct(EmberKeyData keyStruct)
        {
            _keyStruct = keyStruct;
        }
        
        /// <summary>
        ///  The index of the entry in the table to set.
        /// Return the index as <see cref="System.Int32"/>
        /// </summary>
        public int GetIndex()
        {
            return _index;
        }
        
        /// <summary>
        ///  The address of the partner device that shares the key
        /// Return the address as <see cref="IeeeAddress"/>
        /// </summary>
        public IeeeAddress GetAddress()
        {
            return _address;
        }
        
        /// <summary>
        ///  This indicates whether the key is a Link or a Master Key
        /// Return the linkKey as <see cref="System.Boolean"/>
        /// </summary>
        public bool GetLinkKey()
        {
            return _linkKey;
        }
        
        /// <summary>
        ///  The actual key data associated with the table entry.
        /// Return the keyStruct as <see cref="EmberKeyData"/>
        /// </summary>
        public EmberKeyData GetKeyStruct()
        {
            return _keyStruct;
        }
        
        /// <summary>
        /// Method for serializing the command fields </summary>
        public override int[] Serialize()
        {
            SerializeHeader(_serializer);
            _serializer.SerializeUInt8(_index);
            _serializer.SerializeEmberEui64(_address);
            _serializer.SerializeBool(_linkKey);
            _serializer.SerializeEmberKeyData(_keyStruct);
            return _serializer.GetPayload();
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspSetKeyTableEntryRequest [index=");
            builder.Append(_index);
            builder.Append(", address=");
            builder.Append(_address);
            builder.Append(", linkKey=");
            builder.Append(_linkKey);
            builder.Append(", keyStruct=");
            builder.Append(_keyStruct);
            builder.Append(']');
            return builder.ToString();
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " getNeighbor ".
    /// Returns the neighbor table entry at the given index. The number of active neighbors can be
    /// obtained using the neighborCount command.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspGetNeighborRequest : EzspFrameRequest
    {
        
        public const int FRAME_ID = 121;
        
        /// <summary>
        ///  The index of the neighbor of interest. Neighbors are stored in ascending order by node id,
        /// with all unused entries at the end of the table.
        /// </summary>
        private int _index;
        
        private EzspSerializer _serializer;
        
        public EzspGetNeighborRequest()
        {
            _frameId = FRAME_ID;
            _serializer = new EzspSerializer();
        }
        
        /// <summary>
        /// The index to set as <see cref="uint8_t"/> </summary>
        public void SetIndex(int index)
        {
            _index = index;
        }
        
        /// <summary>
        ///  The index of the neighbor of interest. Neighbors are stored in ascending order by node id,
        /// with all unused entries at the end of the table.
        /// Return the index as <see cref="System.Int32"/>
        /// </summary>
        public int GetIndex()
        {
            return _index;
        }
        
        /// <summary>
        /// Method for serializing the command fields </summary>
        public override int[] Serialize()
        {
            SerializeHeader(_serializer);
            _serializer.SerializeUInt8(_index);
            return _serializer.GetPayload();
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspGetNeighborRequest [index=");
            builder.Append(_index);
            builder.Append(']');
            return builder.ToString();
        }
    }
}

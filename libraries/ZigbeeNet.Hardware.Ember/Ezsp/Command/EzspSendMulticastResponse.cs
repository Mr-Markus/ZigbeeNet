//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    using ZigBeeNet.Hardware.Ember.Ezsp.Structure;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " sendMulticast ".
    /// Sends a multicast message to all endpoints that share a specific multicast ID and are within a
    /// specified number of hops of the sender.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspSendMulticastResponse : EzspFrameResponse
    {
        
        public const int FRAME_ID = 56;
        
        /// <summary>
        ///  An EmberStatus value. For any result other than EMBER_SUCCESS, the message will not be sent.
        /// EMBER_SUCCESS - The message has been submitted for transmission.
        /// EMBER_INVALID_BINDING_INDEX - The bindingTableIndex refers to a non-multicast binding.
        /// EMBER_NETWORK_DOWN - The node is not part of a network. EMBER_MESSAGE_TOO_LONG - The
        /// message is too large to fit in a MAC layer frame. EMBER_NO_BUFFERS - The free packet buffer
        /// pool is empty. EMBER_NETWORK_BUSY - Insufficient resources available in Network or MAC
        /// layers to send message. 
        /// </summary>
        private EmberStatus _status;
        
        /// <summary>
        ///  The sequence number that will be used when this message is transmitted.
        /// </summary>
        private int _sequence;
        
        public EzspSendMulticastResponse(int[] inputBuffer) : 
                base(inputBuffer)
        {
            _status = deserializer.DeserializeEmberStatus();
            _sequence = deserializer.DeserializeUInt8();
        }
        
        /// <summary>
        /// The status to set as <see cref="EmberStatus"/> </summary>
        public void SetStatus(EmberStatus status)
        {
            _status = status;
        }
        
        /// <summary>
        /// The sequence to set as <see cref="uint8_t"/> </summary>
        public void SetSequence(int sequence)
        {
            _sequence = sequence;
        }
        
        /// <summary>
        ///  An EmberStatus value. For any result other than EMBER_SUCCESS, the message will not be sent.
        /// EMBER_SUCCESS - The message has been submitted for transmission.
        /// EMBER_INVALID_BINDING_INDEX - The bindingTableIndex refers to a non-multicast binding.
        /// EMBER_NETWORK_DOWN - The node is not part of a network. EMBER_MESSAGE_TOO_LONG - The
        /// message is too large to fit in a MAC layer frame. EMBER_NO_BUFFERS - The free packet buffer
        /// pool is empty. EMBER_NETWORK_BUSY - Insufficient resources available in Network or MAC
        /// layers to send message. 
        /// Return the status as <see cref="EmberStatus"/>
        /// </summary>
        public EmberStatus GetStatus()
        {
            return _status;
        }
        
        /// <summary>
        ///  The sequence number that will be used when this message is transmitted.
        /// Return the sequence as <see cref="System.Int32"/>
        /// </summary>
        public int GetSequence()
        {
            return _sequence;
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspSendMulticastResponse [status=");
            builder.Append(_status);
            builder.Append(", sequence=");
            builder.Append(string.Format("0x{0:X02}", _sequence));
            builder.Append(']');
            return builder.ToString();
        }
    }
}

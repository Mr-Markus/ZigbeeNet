//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " setRadioPower ".
    /// Sets the radio output power at which a node is operating. Ember radios have discrete power
    /// settings. For a list of available power settings, see the technical specification for the RF
    /// communication module in your Developer Kit.
    /// * <p>
    /// * <b>Note:</b> Care should be taken when using this API on a
    /// running network, as it will directly impact the established link qualities neighboring
    /// nodes have with the node on which it is called. This can lead to disruption of existing routes
    /// and erratic network behavior.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspSetRadioPowerRequest : EzspFrameRequest
    {
        
        public const int FRAME_ID = 153;
        
        /// <summary>
        ///  Desired radio output power, in dBm.
        /// </summary>
        private int _power;
        
        private EzspSerializer _serializer;
        
        public EzspSetRadioPowerRequest()
        {
            _frameId = FRAME_ID;
            _serializer = new EzspSerializer();
        }
        
        /// <summary>
        /// The power to set as <see cref="int8s"/> </summary>
        public void SetPower(int power)
        {
            _power = power;
        }
        
        /// <summary>
        ///  Desired radio output power, in dBm.
        /// Return the power as <see cref="System.Int32"/>
        /// </summary>
        public int GetPower()
        {
            return _power;
        }
        
        /// <summary>
        /// Method for serializing the command fields </summary>
        public override int[] Serialize()
        {
            SerializeHeader(_serializer);
            _serializer.SerializeInt8S(_power);
            return _serializer.GetPayload();
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspSetRadioPowerRequest [power=");
            builder.Append(_power);
            builder.Append(']');
            return builder.ToString();
        }
    }
}

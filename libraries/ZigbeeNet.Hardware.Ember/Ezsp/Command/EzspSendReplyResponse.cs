//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    using ZigBeeNet.Hardware.Ember.Ezsp.Structure;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " sendReply ".
    /// Sends a reply to a received unicast message. The incomingMessageHandler callback for the
    /// unicast being replied to supplies the values for all the parameters except the reply itself.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspSendReplyResponse : EzspFrameResponse
    {
        
        public const int FRAME_ID = 57;
        
        /// <summary>
        ///  An EmberStatus value. EMBER_INVALID_CALL - The EZSP_UNICAST_REPLIES_POLICY is set to
        /// EZSP_HOST_WILL_NOT_SUPPLY_REPLY. This means the NCP will automatically send an empty
        /// reply. The Host must change the policy to EZSP_HOST_WILL_SUPPLY_REPLY before it can supply
        /// the reply. There is one exception to this rule: In the case of responses to message fragments,
        /// the host must call sendReply when a message fragment is received. In this case, the policy set
        /// on the NCP does not matter. The NCP expects a sendReply call from the Host for message
        /// fragments regardless of the current policy settings. EMBER_NO_BUFFERS - Not enough memory
        /// was available to send the reply. EMBER_NETWORK_BUSY - Either no route or insufficient
        /// resources available. EMBER_SUCCESS - The reply was successfully queued for transmission.
        /// </summary>
        private EmberStatus _policyDecision;
        
        public EzspSendReplyResponse(int[] inputBuffer) : 
                base(inputBuffer)
        {
            _policyDecision = deserializer.DeserializeEmberStatus();
        }
        
        /// <summary>
        /// The policyDecision to set as <see cref="EmberStatus"/> </summary>
        public void SetPolicyDecision(EmberStatus policyDecision)
        {
            _policyDecision = policyDecision;
        }
        
        /// <summary>
        ///  An EmberStatus value. EMBER_INVALID_CALL - The EZSP_UNICAST_REPLIES_POLICY is set to
        /// EZSP_HOST_WILL_NOT_SUPPLY_REPLY. This means the NCP will automatically send an empty
        /// reply. The Host must change the policy to EZSP_HOST_WILL_SUPPLY_REPLY before it can supply
        /// the reply. There is one exception to this rule: In the case of responses to message fragments,
        /// the host must call sendReply when a message fragment is received. In this case, the policy set
        /// on the NCP does not matter. The NCP expects a sendReply call from the Host for message
        /// fragments regardless of the current policy settings. EMBER_NO_BUFFERS - Not enough memory
        /// was available to send the reply. EMBER_NETWORK_BUSY - Either no route or insufficient
        /// resources available. EMBER_SUCCESS - The reply was successfully queued for transmission.
        /// Return the policyDecision as <see cref="EmberStatus"/>
        /// </summary>
        public EmberStatus GetPolicyDecision()
        {
            return _policyDecision;
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspSendReplyResponse [policyDecision=");
            builder.Append(_policyDecision);
            builder.Append(']');
            return builder.ToString();
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    using ZigBeeNet.Hardware.Ember.Ezsp.Structure;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " setPolicy ".
    /// Allows the Host to change the policies used by the NCP to make fast decisions.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspSetPolicyRequest : EzspFrameRequest
    {
        
        public const int FRAME_ID = 85;
        
        /// <summary>
        ///  Identifies which policy to modify.
        /// </summary>
        private EzspPolicyId _policyId;
        
        /// <summary>
        ///   The new decision for the specified policy.
        /// </summary>
        private EzspDecisionId _decisionId;
        
        private EzspSerializer _serializer;
        
        public EzspSetPolicyRequest()
        {
            _frameId = FRAME_ID;
            _serializer = new EzspSerializer();
        }
        
        /// <summary>
        /// The policyId to set as <see cref="EzspPolicyId"/> </summary>
        public void SetPolicyId(EzspPolicyId policyId)
        {
            _policyId = policyId;
        }
        
        /// <summary>
        /// The decisionId to set as <see cref="EzspDecisionId"/> </summary>
        public void SetDecisionId(EzspDecisionId decisionId)
        {
            _decisionId = decisionId;
        }
        
        /// <summary>
        ///  Identifies which policy to modify.
        /// Return the policyId as <see cref="EzspPolicyId"/>
        /// </summary>
        public EzspPolicyId GetPolicyId()
        {
            return _policyId;
        }
        
        /// <summary>
        ///   The new decision for the specified policy.
        /// Return the decisionId as <see cref="EzspDecisionId"/>
        /// </summary>
        public EzspDecisionId GetDecisionId()
        {
            return _decisionId;
        }
        
        /// <summary>
        /// Method for serializing the command fields </summary>
        public override int[] Serialize()
        {
            SerializeHeader(_serializer);
            _serializer.SerializeEzspPolicyId(_policyId);
            _serializer.SerializeEzspDecisionId(_decisionId);
            return _serializer.GetPayload();
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspSetPolicyRequest [policyId=");
            builder.Append(_policyId);
            builder.Append(", decisionId=");
            builder.Append(_decisionId);
            builder.Append(']');
            return builder.ToString();
        }
    }
}

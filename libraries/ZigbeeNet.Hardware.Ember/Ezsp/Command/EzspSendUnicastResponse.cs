//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    using ZigBeeNet.Hardware.Ember.Ezsp.Structure;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " sendUnicast ".
    /// Sends a unicast message as per the ZigBee specification. The message will arrive at its
    /// destination only if there is a known route to the destination node. Setting the
    /// ENABLE_ROUTE_DISCOVERY option will cause a route to be discovered if none is known. Setting
    /// the FORCE_ROUTE_DISCOVERY option will force route discovery. Routes to end-device
    /// children of the local node are always known. Setting the APS_RETRY option will cause the
    /// message to be retransmitted until either a matching acknowledgement is received or three
    /// transmissions have been made.
    /// * <p>
    /// * <b>Note:</b> Using the FORCE_ROUTE_DISCOVERY option will cause the first
    /// transmission to be consumed by a route request as part of discovery, so the application
    /// payload of this packet will not reach its destination on the first attempt. If you want the
    /// packet to reach its destination, the APS_RETRY option must be set so that another attempt is
    /// made to transmit the message with its application payload after the route has been
    /// constructed.
    /// * <p>
    /// * <b>Note:</b> When sending fragmented messages, the stack will only assign a new APS
    /// sequence number for the first fragment of the message (i.e., EMBER_APS_OPTION_FRAGMENT is
    /// set and the low-order byte of the groupId field in the APS frame is zero). For all subsequent
    /// fragments of the same message, the application must set the sequence number field in the APS
    /// frame to the sequence number assigned by the stack to the first fragment.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspSendUnicastResponse : EzspFrameResponse
    {
        
        public const int FRAME_ID = 52;
        
        /// <summary>
        ///  An EmberStatus value indicating success or the reason for failure.
        /// </summary>
        private EmberStatus _status;
        
        /// <summary>
        ///  The sequence number that will be used when this message is transmitted.
        /// </summary>
        private int _sequence;
        
        public EzspSendUnicastResponse(int[] inputBuffer) : 
                base(inputBuffer)
        {
            _status = deserializer.DeserializeEmberStatus();
            _sequence = deserializer.DeserializeUInt8();
        }
        
        /// <summary>
        /// The status to set as <see cref="EmberStatus"/> </summary>
        public void SetStatus(EmberStatus status)
        {
            _status = status;
        }
        
        /// <summary>
        /// The sequence to set as <see cref="uint8_t"/> </summary>
        public void SetSequence(int sequence)
        {
            _sequence = sequence;
        }
        
        /// <summary>
        ///  An EmberStatus value indicating success or the reason for failure.
        /// Return the status as <see cref="EmberStatus"/>
        /// </summary>
        public EmberStatus GetStatus()
        {
            return _status;
        }
        
        /// <summary>
        ///  The sequence number that will be used when this message is transmitted.
        /// Return the sequence as <see cref="System.Int32"/>
        /// </summary>
        public int GetSequence()
        {
            return _sequence;
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspSendUnicastResponse [status=");
            builder.Append(_status);
            builder.Append(", sequence=");
            builder.Append(string.Format("0x{0:X02}", _sequence));
            builder.Append(']');
            return builder.ToString();
        }
    }
}

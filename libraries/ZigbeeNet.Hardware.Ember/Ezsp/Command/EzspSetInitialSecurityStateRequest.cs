//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    using ZigBeeNet.Hardware.Ember.Ezsp.Structure;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " setInitialSecurityState ".
    /// Sets the security state that will be used by the device when it forms or joins the network. This
    /// call should not be used when restoring saved network state via networkInit as this will
    /// result in a loss of security data and will cause communication problems when the device
    /// re-enters the network.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspSetInitialSecurityStateRequest : EzspFrameRequest
    {
        
        public const int FRAME_ID = 104;
        
        /// <summary>
        ///  The security configuration to be set.
        /// </summary>
        private EmberInitialSecurityState _state;
        
        private EzspSerializer _serializer;
        
        public EzspSetInitialSecurityStateRequest()
        {
            _frameId = FRAME_ID;
            _serializer = new EzspSerializer();
        }
        
        /// <summary>
        /// The state to set as <see cref="EmberInitialSecurityState"/> </summary>
        public void SetState(EmberInitialSecurityState state)
        {
            _state = state;
        }
        
        /// <summary>
        ///  The security configuration to be set.
        /// Return the state as <see cref="EmberInitialSecurityState"/>
        /// </summary>
        public EmberInitialSecurityState GetState()
        {
            return _state;
        }
        
        /// <summary>
        /// Method for serializing the command fields </summary>
        public override int[] Serialize()
        {
            SerializeHeader(_serializer);
            _serializer.SerializeEmberInitialSecurityState(_state);
            return _serializer.GetPayload();
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspSetInitialSecurityStateRequest [state=");
            builder.Append(_state);
            builder.Append(']');
            return builder.ToString();
        }
    }
}

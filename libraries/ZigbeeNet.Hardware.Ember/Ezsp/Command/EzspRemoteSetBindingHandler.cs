//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    using ZigBeeNet.Hardware.Ember.Ezsp.Structure;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " remoteSetBindingHandler ".
    /// The NCP used the external binding modification policy to decide how to handle a remote set
    /// binding request. The Host cannot change the current decision, but it can change the policy
    /// for future decisions using the setPolicy command.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspRemoteSetBindingHandler : EzspFrameResponse
    {
        
        public const int FRAME_ID = 49;
        
        /// <summary>
        ///  The requested binding.
        /// </summary>
        private EmberBindingTableEntry _entry;
        
        /// <summary>
        ///  The index of a binding table entry.
        /// </summary>
        private int _index;
        
        /// <summary>
        ///  EMBER_SUCCESS if the binding was added to the table and any other status if not.
        /// </summary>
        private EmberStatus _policyDecision;
        
        public EzspRemoteSetBindingHandler(int[] inputBuffer) : 
                base(inputBuffer)
        {
            _entry = deserializer.DeserializeEmberBindingTableEntry();
            _index = deserializer.DeserializeUInt8();
            _policyDecision = deserializer.DeserializeEmberStatus();
        }
        
        /// <summary>
        /// The entry to set as <see cref="EmberBindingTableEntry"/> </summary>
        public void SetEntry(EmberBindingTableEntry entry)
        {
            _entry = entry;
        }
        
        /// <summary>
        /// The index to set as <see cref="uint8_t"/> </summary>
        public void SetIndex(int index)
        {
            _index = index;
        }
        
        /// <summary>
        /// The policyDecision to set as <see cref="EmberStatus"/> </summary>
        public void SetPolicyDecision(EmberStatus policyDecision)
        {
            _policyDecision = policyDecision;
        }
        
        /// <summary>
        ///  The requested binding.
        /// Return the entry as <see cref="EmberBindingTableEntry"/>
        /// </summary>
        public EmberBindingTableEntry GetEntry()
        {
            return _entry;
        }
        
        /// <summary>
        ///  The index of a binding table entry.
        /// Return the index as <see cref="System.Int32"/>
        /// </summary>
        public int GetIndex()
        {
            return _index;
        }
        
        /// <summary>
        ///  EMBER_SUCCESS if the binding was added to the table and any other status if not.
        /// Return the policyDecision as <see cref="EmberStatus"/>
        /// </summary>
        public EmberStatus GetPolicyDecision()
        {
            return _policyDecision;
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspRemoteSetBindingHandler [entry=");
            builder.Append(_entry);
            builder.Append(", index=");
            builder.Append(_index);
            builder.Append(", policyDecision=");
            builder.Append(_policyDecision);
            builder.Append(']');
            return builder.ToString();
        }
    }
}

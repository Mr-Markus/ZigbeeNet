//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    using ZigBeeNet.Hardware.Ember.Ezsp.Structure;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " resetToFactoryDefaults ".
    /// Reset the NCP to factory default.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspResetToFactoryDefaultsResponse : EzspFrameResponse
    {
        
        public const int FRAME_ID = 204;
        
        /// <summary>
        ///  An EzspStatus value indicating success or the reason for failure. 
        /// </summary>
        private EzspStatus _status;
        
        public EzspResetToFactoryDefaultsResponse(int[] inputBuffer) : 
                base(inputBuffer)
        {
            _status = deserializer.DeserializeEzspStatus();
        }
        
        /// <summary>
        /// The status to set as <see cref="EzspStatus"/> </summary>
        public void SetStatus(EzspStatus status)
        {
            _status = status;
        }
        
        /// <summary>
        ///  An EzspStatus value indicating success or the reason for failure. 
        /// Return the status as <see cref="EzspStatus"/>
        /// </summary>
        public EzspStatus GetStatus()
        {
            return _status;
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspResetToFactoryDefaultsResponse [status=");
            builder.Append(_status);
            builder.Append(']');
            return builder.ToString();
        }
    }
}

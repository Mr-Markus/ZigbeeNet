//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:3.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Ember.Ezsp.Command
{
    using ZigBeeNet.Hardware.Ember.Internal.Serializer;
    
    
    /// <summary>
    /// Class to implement the Ember EZSP command " lookupNodeIdByEui64 ".
    /// Returns the node ID that corresponds to the specified EUI64. The node ID is found by searching
    /// through all stack tables for the specified EUI64.
    /// This class provides methods for processing EZSP commands.
    /// </summary>
    public class EzspLookupNodeIdByEui64Response : EzspFrameResponse
    {
        
        public const int FRAME_ID = 96;
        
        /// <summary>
        ///  The short ID of the node or EMBER_NULL_NODE_ID if the short ID is not known.
        /// </summary>
        private int _nodeId;
        
        public EzspLookupNodeIdByEui64Response(int[] inputBuffer) : 
                base(inputBuffer)
        {
            _nodeId = deserializer.DeserializeUInt16();
        }
        
        /// <summary>
        /// The nodeId to set as <see cref="EmberNodeId"/> </summary>
        public void SetNodeId(int nodeId)
        {
            _nodeId = nodeId;
        }
        
        /// <summary>
        ///  The short ID of the node or EMBER_NULL_NODE_ID if the short ID is not known.
        /// Return the nodeId as <see cref="System.Int32"/>
        /// </summary>
        public int GetNodeId()
        {
            return _nodeId;
        }
        
        public override string ToString()
        {
            System.Text.StringBuilder builder = new System.Text.StringBuilder();
            builder.Append("EzspLookupNodeIdByEui64Response [nodeId=");
            builder.Append(string.Format("0x{0:X04}", _nodeId));
            builder.Append(']');
            return builder.ToString();
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using ZigBeeNet.Transaction;
using ZigBeeNet.ZCL;
using ZigBeeNet.ZCL.Protocol;
using ZigBeeNet.ZDO.Field;


namespace ZigBeeNet.ZDO.Command
{
    /// <summary>
    /// Management Permit Joining Request value object class.
    ///
    ///
    /// The Mgmt_Permit_Joining_req is generated from a Local Device requesting that a remote
    /// device or devices allow or disallow association. The Mgmt_Permit_Joining_req is
    /// generated by a management application or commissioning tool which directs the request
    /// to a remote device(s) where the NLME-PERMIT-JOINING.request is executed using the
    /// PermitDuration parameter supplied by Mgmt_Permit_Joining_req. Additionally, if
    /// the remote device is the Trust Center and TC_Significance is set to 1, the Trust Center
    /// authentication policy will be affected. The addressing may be unicast or "broadcast to
    /// all routers and coordinator".
    ///
    /// Code is auto-generated. Modifications may be overwritten!
    /// </summary>
    public class ManagementPermitJoiningRequest : ZdoRequest, IZigBeeTransactionMatcher
    {
        /// <summary>
        /// The ZDO cluster ID.
        /// </summary>
        public const ushort CLUSTER_ID = 0x0036;

        /// <summary>
        /// Permit Duration command message field.
        /// </summary>
        public byte PermitDuration { get; set; }

        /// <summary>
        /// Tc_Significance command message field.
        /// </summary>
        public bool TcSignificance { get; set; }

        /// <summary>
        /// Default constructor.
        /// </summary>
        public ManagementPermitJoiningRequest()
        {
            ClusterId = CLUSTER_ID;
        }

        internal override void Serialize(ZclFieldSerializer serializer)
        {
            base.Serialize(serializer);

            serializer.Serialize(PermitDuration, ZclDataType.Get(DataType.UNSIGNED_8_BIT_INTEGER));
            serializer.Serialize(TcSignificance, ZclDataType.Get(DataType.BOOLEAN));
        }

        internal override void Deserialize(ZclFieldDeserializer deserializer)
        {
            base.Deserialize(deserializer);

            PermitDuration = deserializer.Deserialize<byte>(ZclDataType.Get(DataType.UNSIGNED_8_BIT_INTEGER));
            TcSignificance = deserializer.Deserialize<bool>(ZclDataType.Get(DataType.BOOLEAN));
        }

        public bool IsTransactionMatch(ZigBeeCommand request, ZigBeeCommand response)
        {
            return (response is ManagementPermitJoiningResponse) && ((ZdoRequest) request).DestinationAddress.Equals(((ManagementPermitJoiningResponse) response).SourceAddress);
         }

        public override string ToString()
        {
            var builder = new StringBuilder();

            builder.Append("ManagementPermitJoiningRequest [");
            builder.Append(base.ToString());
            builder.Append(", PermitDuration=");
            builder.Append(PermitDuration);
            builder.Append(", TcSignificance=");
            builder.Append(TcSignificance);
            builder.Append(']');

            return builder.ToString();
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using ZigBeeNet.ZCL;
using ZigBeeNet.ZCL.Protocol;
using ZigBeeNet.ZDO.Field;


namespace ZigBeeNet.ZDO.Command
{
    /// <summary>
    /// Management Direct Join Request value object class.
    ///
    ///
    /// The Mgmt_Direct_Join_req is generated from a Local Device requesting that a Remote
    /// Device permit a device designated by DeviceAddress to join the network directly. The
    /// Mgmt_Direct_Join_req is generated by a management application which directs the
    /// request to a Remote Device where the NLME-DIRECTJOIN.request is to be executed using
    /// the parameter supplied by Mgmt_Direct_Join_req.
    ///
    /// Code is auto-generated. Modifications may be overwritten!
    /// </summary>
    public class ManagementDirectJoinRequest : ZdoRequest
    {
        /// <summary>
        /// The ZDO cluster ID.
        /// </summary>
        public const ushort CLUSTER_ID = 0x0035;

        /// <summary>
        /// Device Address command message field.
        /// </summary>
        public IeeeAddress DeviceAddress { get; set; }

        /// <summary>
        /// Capability Information command message field.
        /// </summary>
        public byte CapabilityInformation { get; set; }

        /// <summary>
        /// Default constructor.
        /// </summary>
        public ManagementDirectJoinRequest()
        {
            ClusterId = CLUSTER_ID;
        }

        internal override void Serialize(ZclFieldSerializer serializer)
        {
            base.Serialize(serializer);

            serializer.Serialize(DeviceAddress, ZclDataType.Get(DataType.IEEE_ADDRESS));
            serializer.Serialize(CapabilityInformation, ZclDataType.Get(DataType.BITMAP_8_BIT));
        }

        internal override void Deserialize(ZclFieldDeserializer deserializer)
        {
            base.Deserialize(deserializer);

            DeviceAddress = deserializer.Deserialize<IeeeAddress>(ZclDataType.Get(DataType.IEEE_ADDRESS));
            CapabilityInformation = deserializer.Deserialize<byte>(ZclDataType.Get(DataType.BITMAP_8_BIT));
        }

        public override string ToString()
        {
            var builder = new StringBuilder();

            builder.Append("ManagementDirectJoinRequest [");
            builder.Append(base.ToString());
            builder.Append(", DeviceAddress=");
            builder.Append(DeviceAddress);
            builder.Append(", CapabilityInformation=");
            builder.Append(CapabilityInformation);
            builder.Append(']');

            return builder.ToString();
        }
    }
}
